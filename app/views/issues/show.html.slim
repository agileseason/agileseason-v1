.b-issue-modal[
  class="issue-#{@issue.number} #{@issue.full_state} #{'js-can-update' if can?(:update, @board)}"
  data-number="#{@issue.number}"
  data-direct_post_url="#{@direct_post.url}"
  data-direct_post_form_data="#{@direct_post.fields.to_json}"
  data-faye-on="#{FayePusher.on?}"
  data-faye-url="#{FayePusher::URL}"
  data-faye-channel="#{FayePusher.issue_channel(@board)}"
  data-faye-client-id="#{current_user.remember_token}"
]

  = k(:issue, @issue).labels_html

  .content
    .issue-content
      .title.b-editable-form
        .issue-title = k(:issue, @issue).title
        a.url href="#{@issue.html_url}" ##{@issue.number}
        .due-date class="#{ :none unless @issue.due_date_at }" = k(:issue, @issue).due_date_at
        = simple_form_for :issue,
          url: update_board_issues_url(@board, @issue.number),
          remote: true,
          method: :patch do |f|
          = f.input :title, label: false, as: :text
          = f.button :magic_submit, value: 'Update'

      .user-list
        = render partial: 'issues/assignee', locals: { issue: @issue }

      - unless @issue.archive?
        .move-to-column
          ul
            - @board.columns.each do |column|
              li [
                data-column="#{column.id}"
                class="#{:active if @issue.column_id == column.id}"
              ]
                a [
                  data-remote="true"
                  href="#{move_to_column_board_issues_url(@board, @issue.number, column.id, force: true) if can?(:update, @board)}"
                ] = column.name

      - unless k(:issue, @issue).body_empty?
        .issue-description = markdown(@issue.body.html_safe, @board)

      - if can?(:read_comments, @board_bag)
        .comments-container
          .issue-comments [
            data-url="#{comments_board_issues_url(@board, @issue.number)}"
            data-comments="#{@issue.comments}"
          ]
            = render partial: 'comments/stub_index', locals: { comments: @issue.comments }
          - if can?(:comments, @board_bag)
            = render partial: 'comments/new', locals: { board: @board, issue: @issue }

    - if can?(:update, @board)
      .issue-actions
        - if can?(:update_issue, @board_bag)
          = render partial: 'issues/actions/edit_labels', locals: { board: @board_bag, issue: @issue }
          = render partial: 'issues/actions/assign', locals: { issue: @issue }
        = render partial: 'issues/actions/edit_due_date', locals: { board: @board, issue: @issue }

        - if can?(:update_issue, @board_bag)
          a.button.issue-close [
            href="#{close_board_issues_url(@board, @issue.number)}"
            data-remote='true'
          ]
            span.octicon.octicon-issue-closed
            | Close issue

          a.button.issue-reopen [
            href="#{reopen_board_issues_url(@board, @issue.number)}"
            data-remote='true'
          ]
            span.octicon.octicon-issue-reopened
            | Reopen issue

        a.button.issue-archive [
          href="#{archive_board_issues_url(@board, @issue.number)}"
          data-remote='true'
          title='Remove issue from board'
        ]
          span.octicon.octicon-package
          | Archive

        a.button.issue-unarchive [
          href="#{unarchive_board_issues_url(@board, @issue.number)}"
          data-remote='true'
          title='Send issue to board'
        ]
          span.octicon.octicon-package
          | Send to board

        = link_to 'ready<span class="octicon octicon-check"></span>'.html_safe,
          toggle_ready_board_issues_url(@board, @issue.number),
          class: "is_ready #{:active if @issue.ready?}",
          remote: true,
          method: :post
