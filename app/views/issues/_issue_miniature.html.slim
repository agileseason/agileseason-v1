/ NOTE Don't change id for issue - 'issues_N' used for update sorting via patch request with params: issues[]...
.issue [
  id="issues_#{issue.number}"
  class="#{issue.state} issue-#{issue.number}"
  data-number=issue.number
  data-column=issue.column_id
  data-url=un(show_board_issues_url(@board, issue.number))
  data-issue="#{k(:issue, issue).to_hash(@board_bag).to_json}"
]
  = k(:issue, issue).labels_html

  .issue-title
    span.issue-name data-number=issue.number = k(:issue, issue).title
    a.url href=issue.html_url ##{issue.number}

  .icons
    = render partial: 'issues/assignee', locals: { assignee: issue.assignee }

    - unless k(:issue, issue).body_empty?
      span.octicon.octicon-book

    - if issue.comments > 0
      span.octicon.octicon-comment-discussion
      span.comments-count #{issue.comments}

    - if issue.checklist.present?
      span.octicon.octicon-check
      span.checklist #{issue.checklist_progress}/#{issue.checklist}

    .due-date [
      class="#{:none unless issue.due_date_at}
        #{:passed if issue.due_date_at && issue.due_date_at < Time.current}"
      title=k(:issue, issue).due_date_at
    ]
      = k(:issue, issue).due_date_on

  .buttons
    - if can?(:update, @board)
      = link_to 'ready',
          toggle_ready_board_issues_url(@board, issue.number),
          class: "is_ready #{:active if issue.ready?}",
          remote: true,
          method: :post
    - else
      a class="is_ready #{:active if issue.ready?}" ready

    - if can?(:update, @board)
      - if issue.open? && can?(:update_issue, @board_bag)
        a.button.close [
          href=close_board_issues_url(@board, issue.number)
          data-type='json'
          data-remote='true'
          title='Click to close'
        ] Close

      a.button.archive [
        class="#{:hidden unless issue.closed?}"
        href=archive_board_issues_url(@board, issue.number)
        data-remote='true'
      ] Archive

